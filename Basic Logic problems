1.SECOND SMALLEST OPTIMISED WITH ALL CONSTRAINTS

import java.util.*;
public class Main {
    static int secondsmallest(int arr[], int n){
        if(n==1 || n==0){
            return -1;.........................>condition 1
        }
        int s = Integer.MAX_VALUE;
        int ss = Integer.MAX_VALUE;
        for(int i=0;i<n;i++){
            if(arr[i]<s){
                ss=s;..............always first change s to ss and update i to s
                s = arr[i];
            }
            else if(arr[i]<ss && arr[i]!=s){
                ss=arr[i];
            }
        }
        if(ss==Integer.MAX_VALUE){.......................................>if elements are same [5,5,5] return 5
            return s;
        }
        return ss;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int arr[] = new int[5];
        for(int i=0;i<5;i++){
            arr[i]=sc.nextInt();
        }
        int n = arr.length;
        System.out.println("secondsmallest:"+secondsmallest(arr,n));
    }
}
PYTHON:
def secsmall(li,n):
    if n<=1:
        return -1
    s=float('inf')
    ss=float('inf')
    for i in li:
        if i<s:
            ss=s
            s=i
        elif i<ss and i!=s:
            ss=i
    if ss==float('inf'):
        return s
    return ss
        
n=int(input())
li=list(map(int,input().split()))
print(secsmall(li,n))

2.SECOND LARGEST
python:
def seclar(li,n):
    if n<=1:
        return -1
    l=float('-inf')
    sl=float('-inf')
    for i in li:
        if i>l:
            sl=l
            l=i
        elif i>sl and i!=l:
            sl=i
    if sl==float('-inf'):
        return l
    return sl
        
n=int(input())
li=list(map(int,input().split()))
print(seclar(li,n))

JAVA:
import java.util.*;
public class Main {
    static int secondlargest(int arr[], int n){
        if(n==1 || n==0){
            return -1;
        }
        int l = Integer.MIN_VALUE;
        int sl = Integer.MIN_VALUE;
        for(int i=0;i<n;i++){
            if(arr[i]>l){
                sl=l;
                l = arr[i];
            }
            else if(arr[i]>sl && arr[i]!=l){
                sl=arr[i];
            }
        }
        if(sl==Integer.MIN_VALUE){
            return l;
        }
        return sl;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int arr[] = new int[5];
        for(int i=0;i<5;i++){
            arr[i]=sc.nextInt();
        }
        int n = arr.length;
        System.out.println("secondlargest:"+secondlargest(arr,n));
    }
}
.................................................................................................................................................................................................................

2.Palindrome
def palindrome(s):
    S = s.lower().....................ignorecase
    l=0
    r=len(s)-1
    while l<r:
        if not s[l].isalpha():.................ignore special characters
            l+=1
        elif not s[r].isalpha():
            r-=1
        elif s[l]!=s[r]:
            return False
            break
        else:
            l+=1
            r-=1
    return True
s=input()
print(palindrome(s))

Java:

import java.util.*;
public class Main{
    static boolean palindrome(String s){
        String S = s.toLowerCase();
        int l=0;
        int r=S.length()-1;
        while(l<r){
            if(!Character.isAlphabetic(S.charAt(l))){
                l+=1;
            }
            else if(!Character.isAlphabetic(S.charAt(r))){
                r-=1;
            }
            else if(S.charAt(l)!=S.charAt(r)){
                return false;
            }
            else{
                l+=1;
            r-=1;
            }
        }
        return true;
    }
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    String s = sc.nextLine();
		System.out.println(palindrome(s));
	}
}
